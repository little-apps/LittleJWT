<?php

namespace LittleApps\LittleJWT\Testing;

use LittleApps\LittleJWT\JWT\JsonWebToken;
use LittleApps\LittleJWT\Mutate\Concerns\HasCustomMutators;
use LittleApps\LittleJWT\Mutate\Concerns\HasDefaultMutators;
use LittleApps\LittleJWT\Mutate\MutateHandler;
use LittleApps\LittleJWT\Validation\Valid;

class TestMutateHandler extends MutateHandler
{
    use HasCustomMutators;
    use HasDefaultMutators;

    /**
     * Attachs mutators callback.
     *
     * @param callable $callback
     * @return static
     */
    public function mutate(callable $callback)
    {
        $instance = new self($this->app, $this->jwk, $this->customMutatorsMapping, $this->defaultMutators);

        // Add mutators from this instance
        foreach ($this->passThruStack as $cb) {
            $instance->passMutatorsThru($cb);
        }

        $instance->passMutatorsThru($callback);

        return $instance;
    }

    /**
     * Creates a Valid instance for checking if a JWT is valid.
     *
     * @param JsonWebToken $jwt JWT instance to validate (generated by parseToken() method)
     * @return TestValid Valid instance (before validation is done)
     */
    public function valid(JsonWebToken $jwt)
    {
        return new TestValid($this->app, $jwt, $this->jwk);
    }
}
