<?php

namespace LittleApps\LittleJWT\Testing;

use Illuminate\Contracts\Foundation\Application;
use Illuminate\Support\Traits\ForwardsCalls;
use LittleApps\LittleJWT\Core\Handler;
use LittleApps\LittleJWT\JWK\JsonWebKey;
use LittleApps\LittleJWT\JWT\JsonWebToken;
use LittleApps\LittleJWT\LittleJWT as RealLittleJWT;
use LittleApps\LittleJWT\Mutate\Concerns\HasCustomMutators;
use LittleApps\LittleJWT\Mutate\Concerns\HasDefaultMutators;
use LittleApps\LittleJWT\Mutate\MutateHandler;
use LittleApps\LittleJWT\Validation\Valid;
use LittleApps\LittleJWT\Validation\Validatables\StackValidatable;
use LittleApps\LittleJWT\Validation\Validator;

class TestHandler extends Handler
{
    use ForwardsCalls;

    /**
     * Creates a Valid instance for checking if a JWT is valid.
     *
     * @param JsonWebToken $jwt JWT instance to validate (generated by parseToken() method)
     * @return Valid Valid instance (before validation is done)
     */
    public function valid(JsonWebToken $jwt)
    {
        return new TestValid($this->app, $jwt, $this->jwk);
    }
}
